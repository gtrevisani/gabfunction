pipeline {
    agent none

    options {
        buildDiscarder(logRotator(daysToKeepStr: '366'))
    }

    stages {
        stage('Checkout') {
            agent any
            //agent {label 'genesys'}
              steps {
                checkout scm
                echo 'Checking out repo...'

                //stash includes: '**/*', name: 'genesys_uc1_review', excludes: '**/.git/**'

                //milestone 1
            }
             }
       stage('Install') {
            agent any
            //agent {label 'genesys'}

          
            steps {
                 
                sh '''
                cd GabFunction/Code
                npm ci
                '''
                
               // milestone 2
            }

            
        }
        
        stage('Build') {
            agent any
            //agent {label 'genesys'}

      
            steps {
                sh '''
                cd GabFunction/Code
                npm run build
                '''
                }

               // milestone 3
            }

        stage('Zip') {
            agent any
            //agent {label 'genesys'}

            
            steps {
                script {
                zip zipFile: 'C:\\temp\\deploy.zip', archive: false, dir: 'GabFunction/Code', overwrite:true
                }
                }

               // milestone 3
            }
        }

  /*   post {
            success {
               withCredentials([usernamePassword(credentialsId: 'TerraformApp', 
                          passwordVariable: 'AZURE_CLIENT_SECRET', 
                          usernameVariable: 'AZURE_CLIENT_ID')]) {
            sh '''
              # Login to Azure with ServicePrincipal
              az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
              # Set default subscription
              az account set --subscription $AZURE_SUBSCRIPTION_ID
              # Execute publish
              #func azure functionapp publish $AZURE_FUNCTION_APP
              az functionapp deployment source config-zip --name $AZURE_FUNCTION_APP --src 'C:\\temp\\deploy.zip' --resource-group $AZURE_RESOURCE_GROUP
              # Logout from Azure
              az logout
            '''
          }
        }*/
}
